// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transformation.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atlas.Augmented {

  /// <summary>Holder for reflection information generated from transformation.proto</summary>
  public static partial class TransformationReflection {

    #region Descriptor
    /// <summary>File descriptor for transformation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransformationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChR0cmFuc2Zvcm1hdGlvbi5wcm90bxIPYXRsYXMuYXVnbWVudGVkGgx2ZWN0",
            "b3IucHJvdG8aEHF1YXRlcm5pb24ucHJvdG8iawoOVHJhbnNmb3JtYXRpb24S",
            "JwoGb3JpZ2luGAEgASgLMhcuYXRsYXMuYXVnbWVudGVkLlZlY3RvchIwCgtv",
            "cmllbnRhdGlvbhgCIAEoCzIbLmF0bGFzLmF1Z21lbnRlZC5RdWF0ZXJuaW9u",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Atlas.Augmented.VectorReflection.Descriptor, global::Atlas.Augmented.QuaternionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atlas.Augmented.Transformation), global::Atlas.Augmented.Transformation.Parser, new[]{ "Origin", "Orientation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Transformation : pb::IMessage<Transformation> {
    private static readonly pb::MessageParser<Transformation> _parser = new pb::MessageParser<Transformation>(() => new Transformation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atlas.Augmented.TransformationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transformation(Transformation other) : this() {
      Origin = other.origin_ != null ? other.Origin.Clone() : null;
      Orientation = other.orientation_ != null ? other.Orientation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transformation Clone() {
      return new Transformation(this);
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 1;
    private global::Atlas.Augmented.Vector origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Atlas.Augmented.Vector Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 2;
    private global::Atlas.Augmented.Quaternion orientation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Atlas.Augmented.Quaternion Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!object.Equals(Orientation, other.Orientation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (orientation_ != null) hash ^= Orientation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (origin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Origin);
      }
      if (orientation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Orientation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (orientation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transformation other) {
      if (other == null) {
        return;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          origin_ = new global::Atlas.Augmented.Vector();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.orientation_ != null) {
        if (orientation_ == null) {
          orientation_ = new global::Atlas.Augmented.Quaternion();
        }
        Orientation.MergeFrom(other.Orientation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (origin_ == null) {
              origin_ = new global::Atlas.Augmented.Vector();
            }
            input.ReadMessage(origin_);
            break;
          }
          case 18: {
            if (orientation_ == null) {
              orientation_ = new global::Atlas.Augmented.Quaternion();
            }
            input.ReadMessage(orientation_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
