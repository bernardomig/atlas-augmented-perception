// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: detectedobjects.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atlas.Augmented {

  /// <summary>Holder for reflection information generated from detectedobjects.proto</summary>
  public static partial class DetectedobjectsReflection {

    #region Descriptor
    /// <summary>File descriptor for detectedobjects.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DetectedobjectsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVkZXRlY3RlZG9iamVjdHMucHJvdG8SD2F0bGFzLmF1Z21lbnRlZBoMaGVh",
            "ZGVyLnByb3RvGhRkZXRlY3RlZG9iamVjdC5wcm90byJ0Cg9EZXRlY3RlZE9i",
            "amVjdHMSJwoGaGVhZGVyGAEgASgLMhcuYXRsYXMuYXVnbWVudGVkLkhlYWRl",
            "chI4Cg9kZXRlY3RlZE9iamVjdHMYAiADKAsyHy5hdGxhcy5hdWdtZW50ZWQu",
            "RGV0ZWN0ZWRPYmplY3RiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Atlas.Augmented.HeaderReflection.Descriptor, global::Atlas.Augmented.DetectedobjectReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atlas.Augmented.DetectedObjects), global::Atlas.Augmented.DetectedObjects.Parser, new[]{ "Header", "DetectedObjects_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DetectedObjects : pb::IMessage<DetectedObjects> {
    private static readonly pb::MessageParser<DetectedObjects> _parser = new pb::MessageParser<DetectedObjects>(() => new DetectedObjects());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectedObjects> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atlas.Augmented.DetectedobjectsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectedObjects() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectedObjects(DetectedObjects other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      detectedObjects_ = other.detectedObjects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectedObjects Clone() {
      return new DetectedObjects(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Atlas.Augmented.Header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Atlas.Augmented.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "detectedObjects" field.</summary>
    public const int DetectedObjects_FieldNumber = 2;
    private static readonly pb::FieldCodec<global::Atlas.Augmented.DetectedObject> _repeated_detectedObjects_codec
        = pb::FieldCodec.ForMessage(18, global::Atlas.Augmented.DetectedObject.Parser);
    private readonly pbc::RepeatedField<global::Atlas.Augmented.DetectedObject> detectedObjects_ = new pbc::RepeatedField<global::Atlas.Augmented.DetectedObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Atlas.Augmented.DetectedObject> DetectedObjects_ {
      get { return detectedObjects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectedObjects);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectedObjects other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!detectedObjects_.Equals(other.detectedObjects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= detectedObjects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      detectedObjects_.WriteTo(output, _repeated_detectedObjects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += detectedObjects_.CalculateSize(_repeated_detectedObjects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectedObjects other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Atlas.Augmented.Header();
        }
        Header.MergeFrom(other.Header);
      }
      detectedObjects_.Add(other.detectedObjects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Atlas.Augmented.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            detectedObjects_.AddEntriesFrom(input, _repeated_detectedObjects_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
