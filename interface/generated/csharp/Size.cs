// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: size.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atlas.Augmented {

  /// <summary>Holder for reflection information generated from size.proto</summary>
  public static partial class SizeReflection {

    #region Descriptor
    /// <summary>File descriptor for size.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SizeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpzaXplLnByb3RvEg9hdGxhcy5hdWdtZW50ZWQiNAoEU2l6ZRINCgV3aWR0",
            "aBgBIAEoAhIOCgZoZWlndGgYAiABKAISDQoFZGVwdGgYAyABKAJiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atlas.Augmented.Size), global::Atlas.Augmented.Size.Parser, new[]{ "Width", "Heigth", "Depth" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Size : pb::IMessage<Size> {
    private static readonly pb::MessageParser<Size> _parser = new pb::MessageParser<Size>(() => new Size());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Size> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atlas.Augmented.SizeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Size() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Size(Size other) : this() {
      width_ = other.width_;
      heigth_ = other.heigth_;
      depth_ = other.depth_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Size Clone() {
      return new Size(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private float width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "heigth" field.</summary>
    public const int HeigthFieldNumber = 2;
    private float heigth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Heigth {
      get { return heigth_; }
      set {
        heigth_ = value;
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 3;
    private float depth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Size);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Size other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Heigth != other.Heigth) return false;
      if (Depth != other.Depth) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0F) hash ^= Width.GetHashCode();
      if (Heigth != 0F) hash ^= Heigth.GetHashCode();
      if (Depth != 0F) hash ^= Depth.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Width != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Width);
      }
      if (Heigth != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Heigth);
      }
      if (Depth != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Depth);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0F) {
        size += 1 + 4;
      }
      if (Heigth != 0F) {
        size += 1 + 4;
      }
      if (Depth != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Size other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0F) {
        Width = other.Width;
      }
      if (other.Heigth != 0F) {
        Heigth = other.Heigth;
      }
      if (other.Depth != 0F) {
        Depth = other.Depth;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            Width = input.ReadFloat();
            break;
          }
          case 21: {
            Heigth = input.ReadFloat();
            break;
          }
          case 29: {
            Depth = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
