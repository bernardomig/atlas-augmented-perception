// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: boundingbox.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atlas.Augmented {

  /// <summary>Holder for reflection information generated from boundingbox.proto</summary>
  public static partial class BoundingboxReflection {

    #region Descriptor
    /// <summary>File descriptor for boundingbox.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BoundingboxReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFib3VuZGluZ2JveC5wcm90bxIPYXRsYXMuYXVnbWVudGVkGhR0cmFuc2Zv",
            "cm1hdGlvbi5wcm90bxoKc2l6ZS5wcm90byJmCgtCb3VuZGluZ0JveBIyCgl0",
            "cmFuc2Zvcm0YASABKAsyHy5hdGxhcy5hdWdtZW50ZWQuVHJhbnNmb3JtYXRp",
            "b24SIwoEc2l6ZRgCIAEoCzIVLmF0bGFzLmF1Z21lbnRlZC5TaXplYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Atlas.Augmented.TransformationReflection.Descriptor, global::Atlas.Augmented.SizeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atlas.Augmented.BoundingBox), global::Atlas.Augmented.BoundingBox.Parser, new[]{ "Transform", "Size" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BoundingBox : pb::IMessage<BoundingBox> {
    private static readonly pb::MessageParser<BoundingBox> _parser = new pb::MessageParser<BoundingBox>(() => new BoundingBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoundingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atlas.Augmented.BoundingboxReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox(BoundingBox other) : this() {
      Transform = other.transform_ != null ? other.Transform.Clone() : null;
      Size = other.size_ != null ? other.Size.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox Clone() {
      return new BoundingBox(this);
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 1;
    private global::Atlas.Augmented.Transformation transform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Atlas.Augmented.Transformation Transform {
      get { return transform_; }
      set {
        transform_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private global::Atlas.Augmented.Size size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Atlas.Augmented.Size Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoundingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoundingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transform, other.Transform)) return false;
      if (!object.Equals(Size, other.Size)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transform_ != null) hash ^= Transform.GetHashCode();
      if (size_ != null) hash ^= Size.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transform_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transform);
      }
      if (size_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Size);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      if (size_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoundingBox other) {
      if (other == null) {
        return;
      }
      if (other.transform_ != null) {
        if (transform_ == null) {
          transform_ = new global::Atlas.Augmented.Transformation();
        }
        Transform.MergeFrom(other.Transform);
      }
      if (other.size_ != null) {
        if (size_ == null) {
          size_ = new global::Atlas.Augmented.Size();
        }
        Size.MergeFrom(other.Size);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (transform_ == null) {
              transform_ = new global::Atlas.Augmented.Transformation();
            }
            input.ReadMessage(transform_);
            break;
          }
          case 18: {
            if (size_ == null) {
              size_ = new global::Atlas.Augmented.Size();
            }
            input.ReadMessage(size_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
